var express = require('express');
var router = express.Router();
var utils = require('../lib/utils.js')
var cors = require('./cors')
var tokenSDKServer = require('token-sdk-server')
var fs = require('fs')
const Base64 = require('js-base64').Base64


// var session = require('express-session');
// var FileStore = require('session-file-store')(session)

// function fn (first, second = {k0: '0', k1: 1}) {
//   console.log('first', first)
//   console.log('second', second)
//   console.log('k0', second.k0)
//   console.log('k1', second.k1)
// }

/* GET users listing. */
router.route('/test')
  .options(cors.corsWithOptions, (req, res) => {
    res.sendStatus(200)
  })
  .get(cors.corsWithOptions, (req, res, next) =>{
    // 测试远端的pvdata
    let {didttm, idpwd} = require('../tokenSDKData/privateConfig.js')//.didttm.did
    let priStr = JSON.parse(tokenSDKServer.decryptDidttm(didttm, idpwd).data).prikey // 0xcf0fbbdac3353253cec457a81a560d916bfb229a710774747e29f0ff1c1daa59
    tokenSDKServer.getPvData


    // // 测试备份父did的待办事项 list
    // let key = '0x' + tokenSDKServer.hashKeccak256(`did:ttm:u011b80743b5fa85ade3a5696eef660b2bae1ba4ba2b84938f26f024cf3fcdgo to check businessLicense`)
    // tokenSDKServer.pullData(key, false).then(response => {
    //   console.log(response.data)
    //   res.status(200).json({
    //     result: true,
    //     message: '',
    //     data: JSON.parse(response.data.result.data)
    //   })
    // })
    
    // // 测试备份的数据是什么样的。
    // let a = '0x59a955b5178198e52052f1e588da785eeb0c8e10b3e3000c86773c4bddb70089'
    // let b = '0xc26560700a7c0b50937acb7eb9134132c3ce009e5c1780cb769ce58ee17a20f3'
    // tokenSDKServer.getTemporaryCertifyData(a).then(respons => {
    //   console.log(respons.data)
    //   tokenSDKServer.getTemporaryCertifyData(b).then(respons => {
    //     console.log(respons.data)
    //   })
    // }).catch(error => {
    //   console.log(error)
    // })

    // 测试默认参数
    // fn('str')


    // 测试验签
    // let {didttm, idpwd} = require('../tokenSDKData/privateConfig.js')//.didttm.did
    // let priStr = JSON.parse(tokenSDKServer.decryptDidttm(didttm, idpwd).data).prikey // 0xcf0fbbdac3353253cec457a81a560d916bfb229a710774747e29f0ff1c1daa59
    // let obj = {
    //   "businessLicenseData": {
    //     "applicantDid": "did:ttm:o085219a4ead4ff8ebdbad72bc99bbf9dc47cd2f9ae9800998ecf8427e4a13",
    //     "applicantSuperDid": "did:ttm:u011b80743b5fa85ade3a5696eef660b2bae1ba4ba2b84938f26f024cf3fcd",
    //     "claim_sn": "0x49ac373cca54410f4570540bb5925947bfd931bf5def21ee143774a924d55508",
    //     "createTime": "1594864821000",
    //     "ocrData": {
    //       "unifiedSocialCreditCode": "91110108MA01BM825Q",
    //       "name": "北京投肯科技有限公司",
    //       "type": "其他有限责任公司",
    //       "residence": "北京市海淀区永澄北路2号院1号楼B座三层30099-244号",
    //       "legalRepresentative": "蔡明军",
    //       "registeredCapital": "621.7722万元",
    //       "dateOfEstablishment": "2018年04月23日",
    //       "operatingPeriod": "2068年04月22日",
    //       "businessScope": "数据处理旧(数据处理中的银行卡后不含立务承办展示活动组权文化艺术交流旧值在14以上的云计算数据中除外)(企业依法自主选择经营项目开展经营活动依法l须经批准的项目经相关部门批准后依批准的内容开展经营活动不得从事本市产业政策禁止和限制类项目的政管登记机关★在线扫码获取详细信息G提示每年1月1日至6月30日通过企业信用信息公示系统报送上一年度年度报告并公2018Goncocnacnanoaucuacn",
    //       "registrationAuthority": "北京市工商行政管理局",
    //       "businessLicense": "0x3d60ae00b09686201e845632da3a40c818836e2eb8fdb70abe073b2772e3da24",
    //       "longitude": "116.653648",
    //       "latitude": "40.12218",
    //       "applicantBankAccountName": "百度科技",
    //       "applicantBankName": "北京银行",
    //       "applicantBankAccountNumber": "6469494646",
    //       "receiveBankName": "北京银行",
    //       "receiveBankAccountName": "北京投肯科技",
    //       "receiveBankAccountNumber": "88888888888888888888",
    //       "verificationMoney": "0.13元"
    //     }
    //   },
    //   "sign": "0x4b6db5053f63939cad904da1fbf8cc5c809f8477d6c3938c6048c3bf61ecd8b623c5d7a2f5402951f380f4b668d1dc1084b82ea7bfffa838e638fd992e1f2e6101"
    // }
    // let signObj = JSON.stringify(obj)
    // let hashStr = tokenSDKServer.hashKeccak256(obj)
    // console.log('hashStr', hashStr)
    // hashStr = '0x9d25d6990ab6068fab344d7f07bbb7173ff89ad0967327febaa420214f9fda44'
    // let signData = tokenSDKServer.sign({keys: priStr, msg: hashStr})
    // console.log('signData', signData)
    // let signData = '0x4b6db5053f63939cad904da1fbf8cc5c809f8477d6c3938c6048c3bf61ecd8b623c5d7a2f5402951f380f4b668d1dc1084b82ea7bfffa838e638fd992e1f2e6101'
    // signData = '0x4b6db5053f63939cad904da1fbf8cc5c809f8477d6c3938c6048c3bf61ecd8b623c5d7a2f5402951f380f4b668d1dc1084b82ea7bfffa838e638fd992e1f2e6127'
    // signData = '0x4b6db5053f63939cad904da1fbf8cc5c809f8477d6c3938c6048c3bf61ecd8b623c5d7a2f5402951f380f4b668d1dc1084b82ea7bfffa838e638fd992e1f2e6128'
    // signData = '0x4b6db5053f63939cad904da1fbf8cc5c809f8477d6c3938c6048c3bf61ecd8b623c5d7a2f5402951f380f4b668d1dc1084b82ea7bfffa838e638fd992e1f2e61'
    // let isok = tokenSDKServer.verify({sign: signData})
    // // console.log('signData', signData)
    // console.log('isok', isok)





    // res.status(200).json({
    //   result: true,
    //   message: '',
    //   data: ''
    // })
  })
  .post(cors.corsWithOptions, (req, res, next) => {
    res.send('post')
  })
  .put(cors.corsWithOptions, (req, res, next) => {
    res.send('put')
  })
  .delete(cors.corsWithOptions, (req, res, next) => {
    res.send('delete')
  })

router.route('/setPvdata')
  .options(cors.corsWithOptions, (req, res) => {
    res.sendStatus(200)
  })
  .get(cors.corsWithOptions, (req, res, next) =>{
    res.send('get')
  })
  .post(cors.corsWithOptions, (req, res, next) => {
    let did = 'did:ttm:a0e01cb27c8e5160a907b1373f083af3d2eb64fd8ee9800998ecf8427eab11',
        privStr = '0xcf0fbbdac3353253cec457a81a560d916bfb229a710774747e29f0ff1c1daa59',
        key = '0xf1aa1f4416c5189d150eebf3a0bf1d514f2c35412a3523eb9e3af41375b96b74',
        originCt = '',
        type = 'pvdata',
        signObj = `update backup file${originCt}for${did}with${key}type${type}`,
        sign = tokenSDKServer.sign({keys: privStr, msg: signObj}),
        signStr = `0x${sign.r.toString('hex')}${sign.s.toString('hex')}00`
        isok = tokenSDKServer.verify({sign})
    // console.log('sign', sign)
    // console.log('signStr', signStr)
    // console.log('isok', isok) // true


    tokenSDKServer.backupData(did, key, 'pvdata', originCt, signStr).then(response => {
      console.log('response', response.data)
    }).catch(error => {
      console.log('error', error)
    })

    res.status(200).json({
      result: true,
      message: '',
      data: ''
    })
  })
  .put(cors.corsWithOptions, (req, res, next) => {
    res.send('put')
  })
  .delete(cors.corsWithOptions, (req, res, next) => {
    res.send('delete')
  })

// 得到pvdata
router.route('/getPvdata')
  .options(cors.corsWithOptions, (req, res) => {
    res.sendStatus(200)
  })
  .get(cors.corsWithOptions, (req, res, next) =>{
    // res.send('get')
    // 解密
    let {didttm, idpwd} = require('../tokenSDKData/privateConfig.js')//.didttm.did
    let priStr = JSON.parse(tokenSDKServer.decryptDidttm(didttm, idpwd).data).prikey
    tokenSDKServer.getPvData(didttm.did).then(response => {
      // console.log(response.data)
      if (response.data.result) {
        let pvdataCt = response.data.result.data
        let pvdata = tokenSDKServer.decryptPvData(pvdataCt, priStr)
        pvdata = JSON.parse(pvdata)
        // console.log('pvdata', pvdata)
        // pvdata.pendingTask = {}
        // let ct = tokenSDKServer.encryptPvData(pvdata, priStr)
        // console.log('ct', ct)
        res.status(200).json({
          result: true,
          message: '',
          data: pvdata
        })
      }
    }).catch(error => {
      console.log(error)
      res.status(500).json({
        result: false,
        message: '',
        data: error
      })
    })
  })
  .post(cors.corsWithOptions, (req, res, next) => {
    res.send('post')
  })
  .put(cors.corsWithOptions, (req, res, next) => {
    res.send('put')
  })
  .delete(cors.corsWithOptions, (req, res, next) => {
    res.send('delete')
  })

module.exports = router;
